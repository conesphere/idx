#!/bin/bash
#PREFIX=${0%/bin/*}
# Make sure there is exact one share/idx path in the front
EXTDIR="${HOME}/.idx/extensions /etc/idx/extensions ${PREFIX}/share/idx/extensions"
CFGPATH="${PREFIX}/share/idx/config /etc/idx/config ${HOME}/.idx/config"
# we want a command to log to stderr 
errcho() { >&2 echo "${0}:" "${@}"; }
export IDX_DIR IDX_BLOB IDX_REMOTE PATH PREFIX

# load all config variables to index environment 
for dir in ${CFGPATH}
do
	if [[ -a ${dir} ]]
	then
		# shellcheck source=./idx-add
		. "${dir}"
	fi
done

# defaulting config variables 
IDX_DIR=${IDX_DIR:=~/.idx/data}
IDX_BLOB=${IDX_BLOB:=~/.idx/blob}

# parsing command line args 
while [[ "${1}" = -* ]] && [[ -n "${1}" ]]
do
	if [[ "${1}" = "-d" ]]
	then
		shift
		IDX_DIR="${1}"
		shift
		continue
	fi
	errcho "I dont understand parameter ${1}"
	shift
	continue
done

# this function expands an IDX Path and returns that to stdout
# call $(idxpand "${id}") to utilize this 
idxpand() {
	echo "${1:0:6}/${1:6:6}/${1:12:6}/${1:18:6}/${1}"
}

# this one checks  if the data location ist there
# if the location is not there it usually skips the entry 
# usage: idxchkloc ${locpath} || continue
idxchkloc() {
	if [[ ! -d "${1}" ]]
	then
      errcho "ID ${1##*/} is not indexed, skipping!"
		return 1
	fi
	return 0
}

# this one checks  if the data blob ist there
# usage: idxchkblob ${blobpath} || continue
idxchkblob() {
	if [[ ! -a "${1}" ]]
	then
      errcho "ID ${1##*/} has no data ${2}"
      return 1
	fi
	return 0
}

# because we dont have any switches left
# we can push forward the command
CMD="${1}"
if [[ -z "${CMD}" ]]
then
	errcho "I need a command to know what I should do"
	exit 1
fi
shift
CMD_FOUND="false"
for dir in ${EXTDIR}
do
	if [[ -f ${dir}/idx-${CMD} ]]
	then
		CMD_FOUND="true"
		# shellcheck source=./idx-add
		. "${dir}"/idx-"${CMD}" "${@}"
		break
	fi
done
if [[ "${CMD_FOUND}" = "false" ]]
then
	errcho "We where not able to locate command script idx-${CMD} in path ${EXTDIR}"
	exit 1
fi
# ensure that git annex stuff is ready and committed if needed

