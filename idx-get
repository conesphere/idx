#!/bin/bash
shopt -s expand_aliases
############################################################
# This one recieves a list of file ids from the repository #
while [[ "${1}" = -* ]] && [[ -n "${1}" ]]
do
	if [[ "${1}" = "-t" ]]
	then
		shift
		target="${1}"
		shift
		if [[ ! -d "${target}" ]]
		then
			mkdir -p "${target}"
		fi
		cd "${target}" || exit $?
		continue
	fi
	errcho "I dont understand parameter ${1}"
	shift
	continue
done

while read id
do
	gen_loc
	test_loc
	if [[ ! -a ${loc}/data ]]
	then
		errcho "Data of ${id} does not exist in index, skipping"
		continue
	fi
	# now lets find a useable filename and go ahead...
	if [[ ! -f ${loc}/name ]] 
	then 
		name=${id}
		# we guess here that it is unlikely that a symlink known exactly as the id is in the 
		# directory pointing to something else than the idxed data blob 
		while [[ -e ${name} ]]
		do
			if [[ -L ${name} ]]
			then
				tloc=$(readlink "${name}")
				if [[ "${tloc}" = "${loc}/data" ]]
				then
					# nothing left to do, skip it
					break
				fi 	
			fi
			cnt=$((${cnt}+1))
			name=${name%-*}-${cnt}
		done
	else
		name=$(cat ${loc}/name | (
			while read name
			do
				if [[ ! -e "${name}" ]]
				then
					echo "${name}"
					exit
				fi
				if [[ -L "${name}" ]]
				then
					tloc=$(readlink "${name}")
					if [[ "${tloc}" = "${loc}/data" ]]
					then
						echo "${name}"
						exit
					else
						errcho "${tloc} vs ${loc}/data"
					fi 	
				fi
			done
			# if I am here that means we did not found a name useable
			read name < ${loc}/name
			while [[ -e ${name} ]]
			do
				if [[ -L ${name} ]]
				then
					tloc=$(readlink "${name}")
					if [[ "${tloc}" = "${loc}/data" ]]
					then
						echo ${name}
						exit
					fi 	
				fi
				cnt=$((${cnt}+1))
				name=${cnt}-${name#*-}
			done
			echo ${name}
			exit
		))
	fi
	if [[ -z "${name}" ]]
	then
		errcho "Got no name at all for ${id} this is a bug, skipping"
		continue
	fi
	if [[ -L "${name}" ]]
	then
		errcho "Name ${name} ${id} is already checked out, continue"
		# nothing left to do, skip it
	else
		ln -s ${loc}/data ${name}
	fi
	echo ${name}
done

